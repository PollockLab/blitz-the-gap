---
title: "Accessing the STAC Catalogue"
toc: true
number-sections: true
number-depth: 1
---

# What is a STAC Catalog?

From Bon in a Box's "Working with STAC" documentation, which you can see [here](https://geo-bon.github.io/bon-in-a-box-pipeline-engine/working_with_stac.html "BiaB - Working with STAC"):

> STAC stands for SpatioTemporal Asset Catalog. It is a common language to describe geospatial information, so it can be more easily worked with, indexed, and discovered. Spatial information is stored in a geoJSON format, which can be easily adapted to different domains. The goal of STAC is to enable a global index of all imagery derived data products with an easily implementable standard for organization to expose their data in a persistent and reliable way. STAC objects are hosted in geoJSON format as HTML pages.

# Biodiversité Québec's STAC Catalog

Biodiversité Québec hosts many layers for biodiversity maps and models for Canada and Québec. Most of the layers we will use for challenges will be from this STAC Catalogue.

You can view the layers at the following link:

[![](https://img.shields.io/static/v1?style=for-the-badge&label=View&message=STAC-Catalog&color=b48ead)](https://io.biodiversite-quebec.ca/viewer/inat_canada_heatmaps/inat-canada-heatmapPlantae)

Optionally, you can also browse the [GEO BON STAC Catalog](https://stac.geobon.org/viewer/chelsa-clim/bio1) for global layers and access them using the documentation [here](https://geo-bon.github.io/bon-in-a-box-pipeline-engine/working_with_stac.html "BiaB - Working with STAC").

## iNaturalist density maps

A series of density maps of iNaturalist observations is hosted on the Biodiversité Québec STAC catalogue. This means you can access density maps and work with them as a proxy, or download it locally to use as the basis for a Blitz the Gap challenge. There are two resolutions available for each taxonomic group: 100m, and 1km.

First, load the R packages you will need to use to access the density map layers:

```{r, results='hide', message = FALSE}
library(gdalcubes)
library(rstac)
library(knitr)
library(stars)
library(terra)
library(ggplot2)
library(mapview)
```

Set up the connection to the STAC catalogue:

```{r, results='hide'}
# set up
stac_obj <- stac("https://io.biodiversite-quebec.ca/stac/")

# get iNaturalist heatmaps for Canada
it_obj <- stac_obj |>
  stac_search(collections = "inat_canada_heatmaps") |>
  post_request() |> items_fetch()
it_obj
```

```{r}
# See layers in the object
df <- data.frame(description=character())
for (f in it_obj[['features']]){
  df <- rbind(df,data.frame(description=f$properties$description)) 
}
df$feature_number = 1:nrow(df)
kable(df) |>
  # these next two lines are just so the table is scrollable + prettier on the html page
  # you can ignore it if you run this locally !
  kableExtra::kable_material() |>
  kableExtra::scroll_box(height = "400px") |>
  kableExtra::kable_styling(full_width = TRUE)
```

Let's access one of the layers to map it, as an example. We'll map the density of iNaturalist observations across all taxa by selecting one of the features we listed in the table above.

How do we select one of the layers in the STAC Catalog? You can index them by checking the feature_number column above. Here, we want the 37th layer:

```{r}
# 37 is the number to change if you want another layer from the STAC
inat <- read_stars(paste0(it_obj[['features']][[37]]$assets[[1]]$href), 
                   proxy = TRUE) # using it as a proxy (not a local download,
                                 # to save time and space!)
```

Now, let's map it!

```{r, cache = TRUE}
# read the Canada polygon
canada = sf::read_sf("~/McGill University/Laura's Lab_Group - BioBlitz/data/raw/base-layers/canada-polygon/canada.outline.shp")

# crop the raster to canada (to cut off the ocean, USA, etc.)
inat = sf::st_crop(inat, canada)

# (optional) transform data for easier plotting
# this will square root each raster cell's value. this could also be log10, etc.
inat_sqrt = inat |> sqrt()

# map!
ggplot() +
  geom_stars(data = inat_sqrt, 
             # plotting at a coarser resolution to make this faster
             downsample = 10, 
             na.action = na.omit) +
  scale_fill_viridis_c(option = "turbo", 
                       end = .5,
                       na.value = "transparent") +
  theme_void() +
  theme(legend.position = "top") +
  labs(fill = "Density") +
  coord_equal() 
```

To make an interactive map that we can zoom into, we can use the package `mapview`:

First, let's some mapview options to apply to all the maps we will make here:

```{r}
mapviewOptions(basemaps = c("OpenStreetMap"),
               na.color = "transparent")
```

Now, here's the map!

```{r}
pal = viridis::turbo(5)
mapview(inat_sqrt, 
        col.regions = pal, # assign color palette
        layer.name = "Density (sqrt)") 
```
