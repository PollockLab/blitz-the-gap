[
  {
    "objectID": "workflows.html",
    "href": "workflows.html",
    "title": "Workflows",
    "section": "",
    "text": "Here are some tutorials to access and analyse iNaturalist Canada data to make Blitz the Gap challenges.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccessing the STAC Catalogue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaking priority maps for Blitz the Gap\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing the iNaturalist Canada parquet file\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "workflows/access-data.html",
    "href": "workflows/access-data.html",
    "title": "Accessing the STAC Catalogue",
    "section": "",
    "text": "1 iNaturalist density maps\nA series of density maps of iNaturalist observations is being hosted on the Biodiversité Québec STAC catalogue. This means you can access density maps and work with them as a proxy, or download it locally to use as the basis for a Blitz the Gap challenge.\nThere are two resolutions available for each taxonomic group: 100m, and 1km.\nFirst, load the R packages you will need to use to access the density map layers:\n\nlibrary(gdalcubes)\nlibrary(rstac)\nlibrary(knitr)\nlibrary(stars)\n\nLoading required package: abind\n\n\nLoading required package: sf\n\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(terra)\n\nterra 1.8.21\n\n\n\nAttaching package: 'terra'\n\n\nThe following object is masked from 'package:knitr':\n\n    spin\n\n\nThe following objects are masked from 'package:gdalcubes':\n\n    animate, crop, size\n\nlibrary(ggplot2)\nlibrary(mapview)\n\nSet up the connection to the STAC catalogue:\n\n# set up\nstac_obj &lt;- stac(\"https://io.biodiversite-quebec.ca/stac/\")\n\n# get iNaturalist heatmaps for Canada\nit_obj &lt;- stac_obj |&gt;\n  stac_search(collections = \"inat_canada_heatmaps\") |&gt;\n  post_request() |&gt; items_fetch()\nit_obj\n\n\n# See layers in the object\ndf &lt;- data.frame(id=character(),datetime=character(), description=character())\nfor (f in it_obj[['features']]){\n  df &lt;- rbind(df,data.frame(id=f$id,datetime=f$properties$datetime,description=f$properties$description)) \n}\ndf$feature_number = 1:nrow(df)\nkable(df) |&gt;\n  # these next two lines are just so the table is scrollable + prettier on the html page - you can ignore it locally if you want!\n  kableExtra::kable_material() |&gt;\n  kableExtra::scroll_box(height = \"400px\")\n\n\n\n\n\nid\ndatetime\ndescription\nfeature_number\n\n\n\n\ninat-canada-heatmapReptilia-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n1\n\n\ninat-canada-heatmapReptilia-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n2\n\n\ninat-canada-heatmapReptilia\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Reptilia at 1km resolution\n3\n\n\ninat-canada-heatmapProtozoa-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n4\n\n\ninat-canada-heatmapProtozoa-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n5\n\n\ninat-canada-heatmapProtozoa\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Protozoa at 1km resolution\n6\n\n\ninat-canada-heatmapPlantae-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n7\n\n\ninat-canada-heatmapPlantae-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n8\n\n\ninat-canada-heatmapPlantae\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Plantae at 1km resolution\n9\n\n\ninat-canada-heatmapMollusca-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n10\n\n\ninat-canada-heatmapMollusca-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n11\n\n\ninat-canada-heatmapMollusca\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Mollusca at 1km resolution\n12\n\n\ninat-canada-heatmapMammalia-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n13\n\n\ninat-canada-heatmapMammalia-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n14\n\n\ninat-canada-heatmapMammalia\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Mammalia at 1km resolution\n15\n\n\ninat-canada-heatmapInsecta-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n16\n\n\ninat-canada-heatmapInsecta-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n17\n\n\ninat-canada-heatmapInsecta\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Insecta at 1km resolution\n18\n\n\ninat-canada-heatmapFungi-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n19\n\n\ninat-canada-heatmapFungi-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n20\n\n\ninat-canada-heatmapFungi\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Fungi at 1km resolution\n21\n\n\ninat-canada-heatmapChromista-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n22\n\n\ninat-canada-heatmapChromista-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n23\n\n\ninat-canada-heatmapChromista\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Chromista at 1km resolution\n24\n\n\ninat-canada-heatmapAves-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n25\n\n\ninat-canada-heatmapAves-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n26\n\n\ninat-canada-heatmapAves\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Aves at 1km resolution\n27\n\n\ninat-canada-heatmapArachnida-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n28\n\n\ninat-canada-heatmapArachnida-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n29\n\n\ninat-canada-heatmapArachnida\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Arachnida at 1km resolution\n30\n\n\ninat-canada-heatmapAnimalia-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n31\n\n\ninat-canada-heatmapAnimalia-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n32\n\n\ninat-canada-heatmapAnimalia\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Animalia at 1km resolution\n33\n\n\ninat-canada-heatmapAmphibia-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n34\n\n\ninat-canada-heatmapAmphibia-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n35\n\n\ninat-canada-heatmapAmphibia\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Amphibia at 1km resolution\n36\n\n\ninat-canada-heatmapAll-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n37\n\n\ninat-canada-heatmapAll-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n38\n\n\ninat-canada-heatmapAll\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group All at 1km resolution\n39\n\n\ninat-canada-heatmapActinopterygii-1km\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at1km resolution\n40\n\n\ninat-canada-heatmapActinopterygii-100m\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group at100m resolution\n41\n\n\ninat-canada-heatmapActinopterygii\n2024-12-31T00:00:00Z\nMap of the density of observations in iNaturalist Canada for species of taxonomic group Actinopterygii at 1km resolution\n42\n\n\n\n\n\n\n\nLet’s access one of the layers to map it, as an example. We’ll map the density of iNaturalist observations across all taxa by selecting one of the features we listed in the table above:\n\n# we are choosing asset 37 here since it is all taxonomic groups at 1km resolution.\ninat &lt;- read_stars(paste0(it_obj[['features']][[37]]$assets[[1]]$href), \n                   proxy = TRUE) # using it as a proxy (not a local download,\n                                 # to save time and space!)\n\nNow, let’s map it!\n\n# read the Canada polygon\ncanada = sf::read_sf(\"~/McGill University/Laura's Lab_Group - BioBlitz/data/raw/base-layers/canada-polygon/canada.outline.shp\")\n\n# crop to Canada\ninat_canada = sf::st_crop(inat, canada)\ninat_sqrt = inat_canada |&gt; sqrt()\n\n# map!\nggplot() +\n  geom_stars(data = inat_sqrt, \n             downsample = 10, # plotting at a coarser resolution to make this faster\n             na.action = na.omit) +\n  scale_fill_viridis_c(option = \"turbo\", \n                       end = .5,\n                       na.value = \"transparent\") +\n  theme_void() +\n  theme(legend.position = \"top\") +\n  labs(fill = \"Density\") +\n  coord_equal() \n\n\n\n\n\n\n\n\nTo make an interactive map that we can zoom into, we can use the package mapview:\nFirst, let’s some mapview options to apply to all the maps we will make here:\n\nmapviewOptions(basemaps = c( \"OpenStreetMap\"),\n               na.color = \"transparent\")\n\nNow, here’s the map!\n\npal = viridis::turbo(5)\nmapview(inat_sqrt, \n        col.regions = pal,\n        layer.name = \"Density (sqrt)\") \n\nNumber of pixels is above 5e+05.Only about 5e+05 pixels will be shown.\nYou can increase the value of `maxpixels` to 24627120 to avoid this."
  },
  {
    "objectID": "workflows/parquet-file.html",
    "href": "workflows/parquet-file.html",
    "title": "Using the iNaturalist Canada parquet file",
    "section": "",
    "text": "For this working group, iNaturalist Canada provided us their data as a parquet file. Parquet is an open source file format that compresses and encodes large datasets for more efficient data storage, and importantly, more efficient retrieval of informaiton within the dataset. This format makes data lighter to handle because it is column-oriented, rather than row-oriented like a CSV file (which quickly gets overwhelming when you have many rows!).\nThis little tutorial will show you how to open the parquet file if you would like to explore it yourself. As a reminder, we have already made density maps from this file, so you may not need to explore it (depending on the challenge you’d like to build)!\nFirst, load the R packages you will need to use to access the density map layers:\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(arrow)\nlibrary(dbplyr, warn.conflicts = FALSE)\nlibrary(duckdb)\nlibrary(terra)\nlibrary(mapview) # for interactive maps\n\n# set ggplot theme of choice\ntheme_set(ggpubr::theme_pubr())\n\n\n\nNext, we will open the parquet file using the package arrow:\n\ninat_pq &lt;- arrow::open_dataset(\"~/McGill University/Laura's Lab_Group - BioBlitz/data/raw/biodiversity-data/inat-canada/iNat_non_sensitive_data_Jan2025.parquet\")\n\nNote that this isn’t the same as loading iNaturalist Canada as a CSV in your R session. Here, we’re establishing a connection to the database so we can make queries for the data that we really want.\nTake a look at the columns that are available in the file. We’ll use these columns to query the data with dplyr later:\n\ninat_pq$schema\n\nSchema\nOBJECTID: int64\nid: int32\nobserved_on_string: string\nuser_login: string\nquality_grade: string\nlicense: string\nurl: string\ntag_list: string\ndescription: string\nnum_identification_agreements: int32\nnum_identification_disagreements: int32\ncaptive_cultivated: string\nlatitude: double\nlongitude: double\npositional_accuracy: int32\npublic_positional_accuracy: int32\ngeoprivacy: string\ntaxon_geoprivacy: string\ncoordinates_obscured: string\npositioning_method: string\npositioning_device: string\nplace_town_name: string\nplace_county_name: string\nplace_state_name: string\nplace_country_name: string\nplace_admin1_name: string\nplace_admin2_name: string\nspecies_guess: string\nscientific_name: string\ncommon_name: string\niconic_taxon_name: string\ngeometry: binary\n\nSee $metadata for additional Schema metadata\n\n\n\n\n\nNext, we’ll query the data we want, and we will finish the query with the collect() command to load the query’s result into this R session.\nHere, we’ll summarise the number of observations per species, per group using dplyr (but you can use other dplyr functions like filter() for example!)\n\nquery &lt;- inat_pq |&gt; \n  \n  # E.g. you could filter by species group:\n  # filter(iconic_taxon_name == \"Aves\") |&gt;\n  \n  # Summarise number of obs per species, per species group\n  group_by(iconic_taxon_name, scientific_name) |&gt;\n  summarize(total_obs = n()) |&gt; \n  \n  # load the query into our R session\n  collect()\n\nLet’s have a look at the distribution of the number of observations per species, per group. We’ll put a vertical line to show the 100 observations/species mark, which we’ll dive into soon.\n\nggplot(data = query) +\n  geom_density(aes(x = total_obs,\n                     fill = iconic_taxon_name),\n               alpha = .5, lwd = .1) +\n  geom_vline(xintercept = 100) +\n  scale_x_log10() +\n  labs(x = \"Number of observations per species\",\n       y = \"Density (of species)\",\n       fill = \"Species group\") +\n  theme(legend.position = \"right\")\n\n\n\n\n\n\n\n\nLet’s summarise our initial query to the species group level, to see which groups have more samples:\n\nsummary_query = query |&gt;\n  group_by(iconic_taxon_name) |&gt;\n  summarise(total_obs = sum(total_obs),\n            median_obs = median(total_obs))\n\nThis is just a few lines of code to reorder the species group names according to the number of observations, for prettier plots:\n\nquery$iconic_taxon_name = factor(query$iconic_taxon_name,\n                                 levels = summary_query$iconic_taxon_name[order(summary_query$median_obs)])\nsummary_query$iconic_taxon_name = factor(summary_query$iconic_taxon_name,\n                                         levels = summary_query$iconic_taxon_name[order(summary_query$total_obs)])\n\nWhich groups have more total samples?\n\nggplot(data = summary_query) +\n  geom_bar(aes(y = iconic_taxon_name,\n               x = total_obs,\n               fill = iconic_taxon_name),\n           stat = \"identity\") +\n  theme(legend.position = \"none\") +\n  scale_x_log10()\n\n\n\n\n\n\n\n\n\n\n\nSpecies with under 100 observations are of special interest to iNaturalist, so let’s have a look at which species have fewer than 100 observations.\nFirst, let’s filter our initial query to only retain species with &lt; 100 observations. Here, I removed species with &lt; 5 observations to get rid of some species with mistakes in their names, or that were just higher-level classes, etc. (But you can remove this condition too to make sure you’ve got everything).\n\nquery_under100 = query |&gt;\n  filter(total_obs &lt; 100 & total_obs &gt; 5)\n\nHow many species in each group have fewer than 100 observations?\n\nquery_under100 |&gt; \n  group_by(iconic_taxon_name) |&gt; \n  summarise(nsp = n_distinct(scientific_name)) \n\n# A tibble: 14 × 2\n   iconic_taxon_name   nsp\n   &lt;fct&gt;             &lt;int&gt;\n 1 Protozoa            159\n 2 Chromista           240\n 3 Actinopterygii      350\n 4 Reptilia             68\n 5 Mollusca            577\n 6 Amphibia             37\n 7 Animalia           1246\n 8 Arachnida           559\n 9 Mammalia            284\n10 Fungi              3045\n11 Aves                577\n12 Insecta            9484\n13 Plantae            5781\n14 &lt;NA&gt;                 91\n\n\nLet’s have a look at the number of observations per species for these under-sampled species.\n\nggplot(data = query_under100) +\n  geom_histogram(aes(x = total_obs, \n                          fill = iconic_taxon_name),\n                 bins = 10) +\n  theme(legend.position = \"none\") +\n  facet_wrap(~iconic_taxon_name, ncol = 2) +\n  labs(x = \"Number of observations per species\", \n       y = \"Number of species\") \n\n\n\n\n\n\n\n\nWe can see that for groups like fungi, insects and plants, there are many species with less than 30 observations!\n\nquery_under100 |&gt; \n  group_by(iconic_taxon_name) |&gt; \n  summarise(nsp = n_distinct(scientific_name))\n\n# A tibble: 14 × 2\n   iconic_taxon_name   nsp\n   &lt;fct&gt;             &lt;int&gt;\n 1 Protozoa            159\n 2 Chromista           240\n 3 Actinopterygii      350\n 4 Reptilia             68\n 5 Mollusca            577\n 6 Amphibia             37\n 7 Animalia           1246\n 8 Arachnida           559\n 9 Mammalia            284\n10 Fungi              3045\n11 Aves                577\n12 Insecta            9484\n13 Plantae            5781\n14 &lt;NA&gt;                 91\n\n\n\n\n\nLet’s make the iNaturalist query into a spatial object. First, we’ll make a vector layer, which we’ll then transform into a raster layer.\nFor the example, we’ll only do this for plants:\n\nobs &lt;- inat_pq |&gt;\n  # filter to plant species with &lt; 100 observations:\n  filter(scientific_name %in% query_under100$scientific_name,\n         iconic_taxon_name %in% \"Plantae\") |&gt;\n  # select columns we want to keep\n  select(c(longitude, latitude, \n           iconic_taxon_name, \n           scientific_name, \n           coordinates_obscured)) |&gt;\n  collect()\n\nNext, we need the polygon of Canada and a base grid that we’ll use to make our raster.\n\n# Load Canada polygon\ncanada = sf::read_sf(\"~/McGill University/Laura's Lab_Group - BioBlitz/data/raw/base-layers/canada-polygon/canada.outline.shp\")\n\n# Read in base grid layer to make the raster\nbase.50k = terra::rast(\"~/McGill University/Laura's Lab_Group - BioBlitz/data/raw/base-layers/canada.base.5k.tiff\") |&gt;\n  # convert to a coarser resolution for this example\n  terra::aggregate(fact = 10)\n\nNext, we convert the iNaturalist data to a vector layer and make sure to project it and to crop out any points that are not within Canada (just in case):\n\n# convert the iNaturalist ob\ninat.v = terra::vect(obs, geom = c(\"longitude\",\"latitude\"),\n             crs=\"+proj=longlat +ellps=WGS84\")\n# project to match the base grid\ninat.v = terra::project(inat.v, crs(base.50k))\n# crop observations outside of Canada\ninat.v = terra::crop(inat.v, canada)\n\nNow we can convert this vector into a raster of the density of observations of plant species that have &lt; 100 observations in Canada:\n\n# make iNat density layer\nrareplant.density = rasterize(inat.v, base.50k, fun = \"length\")\n\n# plot it!\npal = viridis::turbo(5)\nmapview(rareplant.density, \n        col.regions = pal,\n        layer.name = \"Density\", \n        na.color = \"transparent\")"
  },
  {
    "objectID": "workflows/parquet-file.html#open-the-parquet-file",
    "href": "workflows/parquet-file.html#open-the-parquet-file",
    "title": "Using the iNaturalist Canada parquet file",
    "section": "",
    "text": "Next, we will open the parquet file using the package arrow:\n\ninat_pq &lt;- arrow::open_dataset(\"~/McGill University/Laura's Lab_Group - BioBlitz/data/raw/biodiversity-data/inat-canada/iNat_non_sensitive_data_Jan2025.parquet\")\n\nNote that this isn’t the same as loading iNaturalist Canada as a CSV in your R session. Here, we’re establishing a connection to the database so we can make queries for the data that we really want.\nTake a look at the columns that are available in the file. We’ll use these columns to query the data with dplyr later:\n\ninat_pq$schema\n\nSchema\nOBJECTID: int64\nid: int32\nobserved_on_string: string\nuser_login: string\nquality_grade: string\nlicense: string\nurl: string\ntag_list: string\ndescription: string\nnum_identification_agreements: int32\nnum_identification_disagreements: int32\ncaptive_cultivated: string\nlatitude: double\nlongitude: double\npositional_accuracy: int32\npublic_positional_accuracy: int32\ngeoprivacy: string\ntaxon_geoprivacy: string\ncoordinates_obscured: string\npositioning_method: string\npositioning_device: string\nplace_town_name: string\nplace_county_name: string\nplace_state_name: string\nplace_country_name: string\nplace_admin1_name: string\nplace_admin2_name: string\nspecies_guess: string\nscientific_name: string\ncommon_name: string\niconic_taxon_name: string\ngeometry: binary\n\nSee $metadata for additional Schema metadata"
  },
  {
    "objectID": "workflows/parquet-file.html#query-the-data",
    "href": "workflows/parquet-file.html#query-the-data",
    "title": "Using the iNaturalist Canada parquet file",
    "section": "",
    "text": "Next, we’ll query the data we want, and we will finish the query with the collect() command to load the query’s result into this R session.\nHere, we’ll summarise the number of observations per species, per group using dplyr (but you can use other dplyr functions like filter() for example!)\n\nquery &lt;- inat_pq |&gt; \n  \n  # E.g. you could filter by species group:\n  # filter(iconic_taxon_name == \"Aves\") |&gt;\n  \n  # Summarise number of obs per species, per species group\n  group_by(iconic_taxon_name, scientific_name) |&gt;\n  summarize(total_obs = n()) |&gt; \n  \n  # load the query into our R session\n  collect()\n\nLet’s have a look at the distribution of the number of observations per species, per group. We’ll put a vertical line to show the 100 observations/species mark, which we’ll dive into soon.\n\nggplot(data = query) +\n  geom_density(aes(x = total_obs,\n                     fill = iconic_taxon_name),\n               alpha = .5, lwd = .1) +\n  geom_vline(xintercept = 100) +\n  scale_x_log10() +\n  labs(x = \"Number of observations per species\",\n       y = \"Density (of species)\",\n       fill = \"Species group\") +\n  theme(legend.position = \"right\")\n\n\n\n\n\n\n\n\nLet’s summarise our initial query to the species group level, to see which groups have more samples:\n\nsummary_query = query |&gt;\n  group_by(iconic_taxon_name) |&gt;\n  summarise(total_obs = sum(total_obs),\n            median_obs = median(total_obs))\n\nThis is just a few lines of code to reorder the species group names according to the number of observations, for prettier plots:\n\nquery$iconic_taxon_name = factor(query$iconic_taxon_name,\n                                 levels = summary_query$iconic_taxon_name[order(summary_query$median_obs)])\nsummary_query$iconic_taxon_name = factor(summary_query$iconic_taxon_name,\n                                         levels = summary_query$iconic_taxon_name[order(summary_query$total_obs)])\n\nWhich groups have more total samples?\n\nggplot(data = summary_query) +\n  geom_bar(aes(y = iconic_taxon_name,\n               x = total_obs,\n               fill = iconic_taxon_name),\n           stat = \"identity\") +\n  theme(legend.position = \"none\") +\n  scale_x_log10()"
  },
  {
    "objectID": "workflows/parquet-file.html#which-species-have-100-observations",
    "href": "workflows/parquet-file.html#which-species-have-100-observations",
    "title": "Using the iNaturalist Canada parquet file",
    "section": "",
    "text": "Species with under 100 observations are of special interest to iNaturalist, so let’s have a look at which species have fewer than 100 observations.\nFirst, let’s filter our initial query to only retain species with &lt; 100 observations. Here, I removed species with &lt; 5 observations to get rid of some species with mistakes in their names, or that were just higher-level classes, etc. (But you can remove this condition too to make sure you’ve got everything).\n\nquery_under100 = query |&gt;\n  filter(total_obs &lt; 100 & total_obs &gt; 5)\n\nHow many species in each group have fewer than 100 observations?\n\nquery_under100 |&gt; \n  group_by(iconic_taxon_name) |&gt; \n  summarise(nsp = n_distinct(scientific_name)) \n\n# A tibble: 14 × 2\n   iconic_taxon_name   nsp\n   &lt;fct&gt;             &lt;int&gt;\n 1 Protozoa            159\n 2 Chromista           240\n 3 Actinopterygii      350\n 4 Reptilia             68\n 5 Mollusca            577\n 6 Amphibia             37\n 7 Animalia           1246\n 8 Arachnida           559\n 9 Mammalia            284\n10 Fungi              3045\n11 Aves                577\n12 Insecta            9484\n13 Plantae            5781\n14 &lt;NA&gt;                 91\n\n\nLet’s have a look at the number of observations per species for these under-sampled species.\n\nggplot(data = query_under100) +\n  geom_histogram(aes(x = total_obs, \n                          fill = iconic_taxon_name),\n                 bins = 10) +\n  theme(legend.position = \"none\") +\n  facet_wrap(~iconic_taxon_name, ncol = 2) +\n  labs(x = \"Number of observations per species\", \n       y = \"Number of species\") \n\n\n\n\n\n\n\n\nWe can see that for groups like fungi, insects and plants, there are many species with less than 30 observations!\n\nquery_under100 |&gt; \n  group_by(iconic_taxon_name) |&gt; \n  summarise(nsp = n_distinct(scientific_name))\n\n# A tibble: 14 × 2\n   iconic_taxon_name   nsp\n   &lt;fct&gt;             &lt;int&gt;\n 1 Protozoa            159\n 2 Chromista           240\n 3 Actinopterygii      350\n 4 Reptilia             68\n 5 Mollusca            577\n 6 Amphibia             37\n 7 Animalia           1246\n 8 Arachnida           559\n 9 Mammalia            284\n10 Fungi              3045\n11 Aves                577\n12 Insecta            9484\n13 Plantae            5781\n14 &lt;NA&gt;                 91"
  },
  {
    "objectID": "workflows/parquet-file.html#convert-the-parquet-query-into-a-vector-and-a-raster-layer",
    "href": "workflows/parquet-file.html#convert-the-parquet-query-into-a-vector-and-a-raster-layer",
    "title": "Using the iNaturalist Canada parquet file",
    "section": "",
    "text": "Let’s make the iNaturalist query into a spatial object. First, we’ll make a vector layer, which we’ll then transform into a raster layer.\nFor the example, we’ll only do this for plants:\n\nobs &lt;- inat_pq |&gt;\n  # filter to plant species with &lt; 100 observations:\n  filter(scientific_name %in% query_under100$scientific_name,\n         iconic_taxon_name %in% \"Plantae\") |&gt;\n  # select columns we want to keep\n  select(c(longitude, latitude, \n           iconic_taxon_name, \n           scientific_name, \n           coordinates_obscured)) |&gt;\n  collect()\n\nNext, we need the polygon of Canada and a base grid that we’ll use to make our raster.\n\n# Load Canada polygon\ncanada = sf::read_sf(\"~/McGill University/Laura's Lab_Group - BioBlitz/data/raw/base-layers/canada-polygon/canada.outline.shp\")\n\n# Read in base grid layer to make the raster\nbase.50k = terra::rast(\"~/McGill University/Laura's Lab_Group - BioBlitz/data/raw/base-layers/canada.base.5k.tiff\") |&gt;\n  # convert to a coarser resolution for this example\n  terra::aggregate(fact = 10)\n\nNext, we convert the iNaturalist data to a vector layer and make sure to project it and to crop out any points that are not within Canada (just in case):\n\n# convert the iNaturalist ob\ninat.v = terra::vect(obs, geom = c(\"longitude\",\"latitude\"),\n             crs=\"+proj=longlat +ellps=WGS84\")\n# project to match the base grid\ninat.v = terra::project(inat.v, crs(base.50k))\n# crop observations outside of Canada\ninat.v = terra::crop(inat.v, canada)\n\nNow we can convert this vector into a raster of the density of observations of plant species that have &lt; 100 observations in Canada:\n\n# make iNat density layer\nrareplant.density = rasterize(inat.v, base.50k, fun = \"length\")\n\n# plot it!\npal = viridis::turbo(5)\nmapview(rareplant.density, \n        col.regions = pal,\n        layer.name = \"Density\", \n        na.color = \"transparent\")"
  }
]